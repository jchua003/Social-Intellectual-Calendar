name: Hybrid Events Processor

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:  # Allows manual triggering
  push:
    branches:
      - main

jobs:
  process-csv-events:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Process CSV events
        run: python csv_to_events.py
        
      - name: Commit CSV results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add events.json
          git diff --staged --quiet || git commit -m "Update events from CSV files"
          
  scrape-museum-events:
    runs-on: ubuntu-latest
    needs: process-csv-events
    strategy:
      matrix:
        museum:
          - moma
          - met
          - nyu-ifa
          - national-arts-club
          - explorers-club
          - womens-history
          - asia-society
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install selenium webdriver-manager
          
      - name: Run museum scraper
        run: |
          if [ "${{ matrix.museum }}" = "moma" ]; then
            python museum_specific_scrapers.py --museum moma
          elif [ "${{ matrix.museum }}" = "met" ]; then
            python museum_specific_scrapers.py --museum met
          elif [ "${{ matrix.museum }}" = "nyu-ifa" ]; then
            python museum_specific_scrapers.py --museum nyu-ifa
          elif [ "${{ matrix.museum }}" = "national-arts-club" ]; then
            python museum_specific_scrapers.py --museum national-arts-club
          elif [ "${{ matrix.museum }}" = "explorers-club" ]; then
            python museum_specific_scrapers.py --museum explorers-club
          elif [ "${{ matrix.museum }}" = "womens-history" ]; then
            python museum_specific_scrapers.py --museum womens-history
          elif [ "${{ matrix.museum }}" = "asia-society" ]; then
            python museum_specific_scrapers.py --museum asia-society
          fi
        env:
          MUSEUM: ${{ matrix.museum }}
          
  merge-and-deploy:
    runs-on: ubuntu-latest
    needs: scrape-museum-events
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Merge all events
        run: python integrated_scraper.py
        
      - name: Update events.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add events.json
          git diff --staged --quiet || git commit -m "Update events from all sources"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          
  deploy-to-pages:
    runs-on: ubuntu-latest
    needs: merge-and-deploy
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
